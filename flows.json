[
    {
        "id": "20ac8dd407885f5d",
        "type": "tab",
        "label": "Dragonframe_Int",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f20a80c5c0dfd286",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f4aaa9f87211afb",
        "type": "subflow",
        "name": "Message from Dragonframe",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "384db60c452cd757"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "f6404371790ba258",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 140,
                "wires": [
                    {
                        "id": "08559261273fd7dd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 200,
                "wires": [
                    {
                        "id": "94507ce7ac3a5464",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 260,
                "wires": [
                    {
                        "id": "6b718d3e9b8d1c73",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 320,
                "wires": [
                    {
                        "id": "b86d8b418a6b12f8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b45223fa5af84c34",
        "type": "subflow",
        "name": "Camera Settings Parsing",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 300,
                "wires": [
                    {
                        "id": "d52d01beec4bcf34"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 500,
                "wires": [
                    {
                        "id": "d52d01beec4bcf34",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9bb44f6703637248",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Intervalometer",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "8f763fcfa9a2d554",
            "4a5a8d6cd7ad3256",
            "ca9db2b297167bc6",
            "5b745e71205304b9",
            "dc2afc305b3f4049"
        ],
        "x": 74,
        "y": 279,
        "w": 742,
        "h": 142
    },
    {
        "id": "66d748d8b763e343",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Alive Heartbeat Message",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "869fa2a8fa523984",
            "d2d9a905d0204ceb",
            "3c8e30648efc73b8",
            "609686ac0b89abea"
        ],
        "x": 534,
        "y": 1179,
        "w": 752,
        "h": 82
    },
    {
        "id": "a42ca3454e649528",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Settings Read from Dropbox file",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "65eea3b9086e805a",
            "55f90c3aae5f59ed",
            "0b284b36f48fb3dd",
            "f15c94f47ebaa145",
            "1fa798ef9e399169",
            "ee81464a8e7ce0bc",
            "a538d555759315e8",
            "44d4ec20d44a2314",
            "e3982fe56a8fbd8f",
            "05f44cf939c27c36",
            "3a04eadae0a74ea8",
            "93637364dedb7624"
        ],
        "x": 454,
        "y": 39,
        "w": 772,
        "h": 222
    },
    {
        "id": "e16afa60a218c27d",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Comm Switch for Testing",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0f9b22e2b168f267",
            "fe1c87cb537bd4c2",
            "eb1be034d2df2c66"
        ],
        "x": 74,
        "y": 139,
        "w": 352,
        "h": 122
    },
    {
        "id": "fc95a5364964861e",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Communication from Dragonframe",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "777c711320926b28",
            "291068297d309ff4",
            "f796e60ca7ad161d",
            "aa69fab8dd6d1c40",
            "8e2ec8c8916bdf24",
            "06b7e743d486e5ec",
            "83558a2d4dd1ec39",
            "7766a80f579491d0",
            "1299a236e72220b3",
            "406cc4d760a0a25a",
            "6a8302e07e51c516",
            "5b9f30ef3294e253",
            "250d8277323b0835",
            "4406adeb35e5e2e7",
            "96d34eae343acaac",
            "ad668695f02ae062",
            "4dd1bbe994c3b52f",
            "6edae490f780c504",
            "c485baf2dbc34784",
            "fd41d6ae3f2edbdf",
            "d5010ddcf1962b6b",
            "a54d238e37f49a60",
            "ac735291685f7021",
            "dad9def59723f79b",
            "68e544609342c4b8",
            "f5f26648fe24ff3b",
            "8d53700361a8d8ba",
            "d7df4ca601759750",
            "8c50a50d865f61ce",
            "0fb5a9bb5160bba9",
            "93aad228810673ba",
            "74cdc4803abf3f17",
            "f6ae599248f3a131",
            "ac1ba67ab623576c",
            "3660e5040e9c3133"
        ],
        "x": 74,
        "y": 439,
        "w": 1972,
        "h": 542
    },
    {
        "id": "8ff9f23da2ccc134",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Calculations",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "688f10d6edfb3084",
            "744fb39301e3cb89",
            "e80123f0211fb519",
            "b8cfb59c1c31dde7",
            "32abb38f14b3ca0e",
            "b348c9ad8bdb872e",
            "d06f29162b479201",
            "418ef16dd3aedbed",
            "a8e7c705f5059430"
        ],
        "x": 534,
        "y": 999,
        "w": 892,
        "h": 162
    },
    {
        "id": "c7a36f579ef38092",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Notes",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8f2484fb1544823e",
            "b0e7814b358d33ed",
            "c431111496bac673",
            "7df5f26e788032bf",
            "a521d58dfaba0a70",
            "1d6172b039713461",
            "c6f81929fc80f8a0"
        ],
        "x": 74,
        "y": 999,
        "w": 432,
        "h": 222
    },
    {
        "id": "863b058e4531a951",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Make sure this path is set",
        "style": {
            "fill": "#ffC000",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "42efc50dc3b35f93",
            "1aaaa58301c51c4e"
        ],
        "x": 74,
        "y": 39,
        "w": 342,
        "h": 82
    },
    {
        "id": "6f2ee2563c258dce",
        "type": "position-config",
        "name": "",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12",
        "contextStore": ""
    },
    {
        "id": "f52ae91beb2ca245",
        "type": "telegram bot",
        "botname": "@patofoto_bot",
        "usernames": "patosuarez",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "none",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": true
    },
    {
        "id": "384db60c452cd757",
        "type": "json",
        "z": "1f4aaa9f87211afb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "08559261273fd7dd",
                "94507ce7ac3a5464",
                "6b718d3e9b8d1c73",
                "f6404371790ba258",
                "b86d8b418a6b12f8"
            ]
        ]
    },
    {
        "id": "08559261273fd7dd",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "captureState",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "captureState",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "94507ce7ac3a5464",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "captureComplete",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "captureComplete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6b718d3e9b8d1c73",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "frameComplete",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "frameComplete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f6404371790ba258",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "hello",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hello",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b86d8b418a6b12f8",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "position",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "position",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d13f2e7f7a456055",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "camName variable",
        "rules": [
            {
                "t": "set",
                "p": "camName",
                "pt": "global",
                "to": "payload.camName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "16338821e57dcf77",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "interval variable",
        "rules": [
            {
                "t": "set",
                "p": "interval",
                "pt": "global",
                "to": "payload.interval",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1034c9a7b66749a2",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "startTime variable",
        "rules": [
            {
                "t": "set",
                "p": "startTime",
                "pt": "global",
                "to": "payload.startTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2eaf416ee0f851bb",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "endTime variable",
        "rules": [
            {
                "t": "set",
                "p": "endTime",
                "pt": "global",
                "to": "payload.endTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "275f7fbf74463a7d",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "weekDays variable",
        "rules": [
            {
                "t": "set",
                "p": "weekDays",
                "pt": "global",
                "to": "payload.weekDays",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f436049697b26c62",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "ipListen variable",
        "rules": [
            {
                "t": "set",
                "p": "ipListen",
                "pt": "global",
                "to": "payload.ipListen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "491a43890f874c47",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "alivePort variable",
        "rules": [
            {
                "t": "set",
                "p": "alivePort",
                "pt": "global",
                "to": "payload.alivePort",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "61d682227f18622d",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "fileSize variable",
        "rules": [
            {
                "t": "set",
                "p": "fileSize",
                "pt": "global",
                "to": "payload.fileSize",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6a59d3ea8c2bb88f",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "cameraModel variable",
        "rules": [
            {
                "t": "set",
                "p": "cameraModel",
                "pt": "global",
                "to": "payload.cameraModel",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad85db95ceb8d52",
        "type": "change",
        "z": "b45223fa5af84c34",
        "name": "projectName variable",
        "rules": [
            {
                "t": "set",
                "p": "projectName",
                "pt": "global",
                "to": "payload.projectName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d52d01beec4bcf34",
        "type": "json",
        "z": "b45223fa5af84c34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 300,
        "wires": [
            [
                "d13f2e7f7a456055",
                "16338821e57dcf77",
                "1034c9a7b66749a2",
                "2eaf416ee0f851bb",
                "275f7fbf74463a7d",
                "f436049697b26c62",
                "491a43890f874c47",
                "61d682227f18622d",
                "6a59d3ea8c2bb88f",
                "7ad85db95ceb8d52"
            ]
        ]
    },
    {
        "id": "8f763fcfa9a2d554",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Intervalometer",
        "nameInt": "global.startTime - global.endTime[Mon-Fri] =... ↻",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "{ \"command\" : \"shoot\", \"frames\" : 1 }",
                "vt": "str",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "interval-time",
        "intervalCount": "interval",
        "intervalCountType": "global",
        "intervalCountMultiplier": 60000,
        "time": "startTime",
        "timeType": "global",
        "offset": 0,
        "offsetType": "none",
        "offsetMultiplier": 60000,
        "timeEnd": "endTime",
        "timeEndType": "global",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "1,2,3,4,5",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "dc2afc305b3f4049"
            ]
        ]
    },
    {
        "id": "4a5a8d6cd7ad3256",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Manual Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"command\" : \"shoot\", \"frames\" : 1 }",
        "payloadType": "str",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "ca9db2b297167bc6"
            ]
        ]
    },
    {
        "id": "ca9db2b297167bc6",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "use dfport variable",
        "rules": [
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "dfport",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "5b745e71205304b9"
            ]
        ]
    },
    {
        "id": "869fa2a8fa523984",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "",
        "nameInt": "timestamp ↻30s",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "date",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "interval",
        "intervalCount": "30",
        "intervalCountType": "num",
        "intervalCountMultiplier": 1000,
        "time": "",
        "timeType": "entered",
        "offset": 0,
        "offsetType": "none",
        "offsetMultiplier": 60000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 660,
        "y": 1220,
        "wires": [
            [
                "3c8e30648efc73b8"
            ]
        ]
    },
    {
        "id": "d2d9a905d0204ceb",
        "type": "udp out",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1210,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3c8e30648efc73b8",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "Alive Message",
        "func": "msg.payload = `${global.get('camName')} is alive`;\nmsg.port = global.get('alivePort');\nmsg.ip = global.get('ipListen');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1220,
        "wires": [
            [
                "609686ac0b89abea"
            ]
        ]
    },
    {
        "id": "5b745e71205304b9",
        "type": "link out",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "dfPort",
        "mode": "link",
        "links": [
            "0fb5a9bb5160bba9"
        ],
        "x": 775,
        "y": 380,
        "wires": []
    },
    {
        "id": "65eea3b9086e805a",
        "type": "file in",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "Read from Dropbox",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 80,
        "wires": [
            [
                "05f44cf939c27c36"
            ]
        ]
    },
    {
        "id": "0f9b22e2b168f267",
        "type": "break director",
        "z": "20ac8dd407885f5d",
        "g": "e16afa60a218c27d",
        "name": "UDP Comms",
        "actors": "",
        "inputType": "msg",
        "inputValue": "payload",
        "lockType": "bool",
        "lockValue": "true",
        "unlockType": "else",
        "unlockValue": "",
        "defaultState": false,
        "useTimeOut": false,
        "timeOut": "30",
        "timeOutUnit": "s",
        "x": 330,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fe1c87cb537bd4c2",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "e16afa60a218c27d",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "0f9b22e2b168f267"
            ]
        ]
    },
    {
        "id": "eb1be034d2df2c66",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "e16afa60a218c27d",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "0f9b22e2b168f267"
            ]
        ]
    },
    {
        "id": "609686ac0b89abea",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "Alive Comm",
        "link": "",
        "director": "0f9b22e2b168f267",
        "resendLast": false,
        "x": 1050,
        "y": 1220,
        "wires": [
            [
                "d2d9a905d0204ceb"
            ]
        ]
    },
    {
        "id": "dc2afc305b3f4049",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Intervalometer",
        "link": "",
        "director": "0f9b22e2b168f267",
        "resendLast": false,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "ca9db2b297167bc6"
            ]
        ]
    },
    {
        "id": "ac1ba67ab623576c",
        "type": "file",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Write to Dropbox",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1270,
        "y": 600,
        "wires": [
            [
                "f6ae599248f3a131"
            ]
        ]
    },
    {
        "id": "74cdc4803abf3f17",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "JSON Shot Data",
        "func": "let cameraName = global.get('camName');\nlet interval = global.get('interval'); //time in minutes\nlet startHour = parseInt(global.get('startTime')); //military time integer\nlet endHour = parseInt(global.get('endTime'));//military time integer\nlet weekDays = global.get('weekDays'); // 1-7\nlet frameSize = global.get('fileSize'); //Frame size in Mb\nlet dailyHours = endHour - startHour;\nlet currentCount = global.get('currentFrame'); //curent number of frames in shot\nlet currentDailyShot = global.get('dailyCounter'); //current daily frame shot\nlet userName = env.get('USER'); //get OS user name for Dropbox path\nlet projectName = global.get('projectName'); //set name of project for Dropbox\nlet upTime = global.get('computerUpTime');\nlet availSpace = global.get('availSpace');\nconst d = new Date();\nlet time = d.getTime();\n\nlet data = {\n    camera_name: cameraName,\n    interval_min: interval,\n    time_start_24: startHour,\n    time_end_24: endHour,\n    current_total_frames: currentCount,\n    current_daily_frame: currentDailyShot,\n    current_shot_size_Gb: (currentCount/1024).toFixed(2),\n    current_shot_time: time,\n    computer_uptime: upTime,\n    avail_Hd_Space: (availSpace/1024).toFixed(2),\n}\n\nmsg.payload = JSON.stringify(data);\nmsg.filename = `/Users/${userName}/Dropbox/${projectName}_Camera_Settings/Info_Last Shot_${cameraName}_Camera.json`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 600,
        "wires": [
            [
                "ac1ba67ab623576c"
            ]
        ]
    },
    {
        "id": "f6ae599248f3a131",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 600,
        "wires": []
    },
    {
        "id": "777c711320926b28",
        "type": "udp in",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "from Dragonframe",
        "iface": "",
        "port": "8888",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "fd41d6ae3f2edbdf",
                "d7df4ca601759750",
                "f796e60ca7ad161d"
            ]
        ]
    },
    {
        "id": "291068297d309ff4",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Connection alive message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 900,
        "wires": []
    },
    {
        "id": "f796e60ca7ad161d",
        "type": "timeout",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Lost Dragonframe Comm Timer",
        "outtopic": "dragonframe",
        "outsafe": "1",
        "outwarning": "Warning",
        "outunsafe": "0",
        "warning": "5",
        "timer": "60",
        "repeat": false,
        "again": true,
        "x": 490,
        "y": 920,
        "wires": [
            [
                "93aad228810673ba"
            ]
        ]
    },
    {
        "id": "aa69fab8dd6d1c40",
        "type": "switch",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 920,
        "wires": [
            [
                "291068297d309ff4"
            ],
            [
                "8e2ec8c8916bdf24"
            ]
        ]
    },
    {
        "id": "8e2ec8c8916bdf24",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Disconnected Message",
        "func": "msg.payload = {\n    content:`Dragonframe from ${global.get('camName')} is offline`,\n    type: \"message\",\n    chatId: 1951007350\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 940,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "06b7e743d486e5ec",
        "type": "telegram sender",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "bot": "f52ae91beb2ca245",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1700,
        "y": 840,
        "wires": [
            [
                "83558a2d4dd1ec39"
            ]
        ]
    },
    {
        "id": "83558a2d4dd1ec39",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Message to Telegram",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.content.text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 840,
        "wires": []
    },
    {
        "id": "7766a80f579491d0",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "captureState",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "1299a236e72220b3",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "captureComplete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 600,
        "wires": []
    },
    {
        "id": "406cc4d760a0a25a",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "position",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 700,
        "wires": []
    },
    {
        "id": "6a8302e07e51c516",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "frameComplete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 640,
        "wires": []
    },
    {
        "id": "5b9f30ef3294e253",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "set dfPort variable",
        "rules": [
            {
                "t": "set",
                "p": "dfport",
                "pt": "global",
                "to": "port",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "8c50a50d865f61ce"
            ]
        ]
    },
    {
        "id": "250d8277323b0835",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Hello",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 480,
        "wires": []
    },
    {
        "id": "4406adeb35e5e2e7",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "set currentFrame variable",
        "rules": [
            {
                "t": "set",
                "p": "currentFrame",
                "pt": "global",
                "to": "payload.frame",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 640,
        "wires": [
            [
                "6a8302e07e51c516",
                "74cdc4803abf3f17"
            ]
        ]
    },
    {
        "id": "96d34eae343acaac",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Format message for Telegram",
        "func": "msg.payload = {\n    content: `Shot frame ${global.get('dailyCounter')} of total frames ${global.get('currentFrame')} from ${global.get('camName')}`,\n    type: \"message\",\n    chatId: 1951007350,\n\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 700,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "ad668695f02ae062",
        "type": "trigger",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1060,
        "y": 700,
        "wires": [
            [
                "3660e5040e9c3133"
            ]
        ]
    },
    {
        "id": "4dd1bbe994c3b52f",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RESET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 800,
        "wires": [
            [
                "8d53700361a8d8ba"
            ]
        ]
    },
    {
        "id": "6edae490f780c504",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Daily Counter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 780,
        "wires": []
    },
    {
        "id": "c485baf2dbc34784",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Daily Counter Variable",
        "rules": [
            {
                "t": "set",
                "p": "dailyCounter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 780,
        "wires": [
            [
                "6edae490f780c504"
            ]
        ]
    },
    {
        "id": "fd41d6ae3f2edbdf",
        "type": "subflow:1f4aaa9f87211afb",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "x": 480,
        "y": 600,
        "wires": [
            [
                "5b9f30ef3294e253",
                "d5010ddcf1962b6b"
            ],
            [
                "7766a80f579491d0"
            ],
            [
                "1299a236e72220b3"
            ],
            [
                "4406adeb35e5e2e7",
                "ad668695f02ae062",
                "8d53700361a8d8ba"
            ],
            [
                "406cc4d760a0a25a"
            ]
        ],
        "inputLabels": [
            "UDP from port 8888"
        ],
        "outputLabels": [
            "Hello",
            "captureState",
            "captureComplete",
            "frameComplete",
            "position"
        ]
    },
    {
        "id": "d5010ddcf1962b6b",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Hello Event",
        "func": "msg.payload = {\n    command: msg.payload.event,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 480,
        "wires": [
            [
                "a54d238e37f49a60"
            ]
        ]
    },
    {
        "id": "a54d238e37f49a60",
        "type": "json",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "250d8277323b0835",
                "8c50a50d865f61ce"
            ]
        ]
    },
    {
        "id": "ac735291685f7021",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Last Frame Message",
        "func": "let expectedFrames = global.get('framesDay');\nlet shotFrames = global.get('dailyCounter');\nlet cameraName = global.get('camName');\n\nif (expectedFrames===shotFrames){\n    msg.payload = {\n    content:`All frames shot today from ${cameraName}`,\n    type: \"message\",\n    chatId: 1951007350,\n};\n} else {\n    msg.payload = {\n    content:`Frame count not as expected from ${cameraName}`,\n    type: \"message\",\n    chatId: 1951007350,\n};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 840,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "dad9def59723f79b",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "End of day trigger",
        "nameInt": "⏲ global.endTime↷[Mon-Fri] = timestamp",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "date",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "time",
        "intervalCount": 1,
        "intervalCountType": "num",
        "intervalCountMultiplier": 60000,
        "time": "endTime",
        "timeType": "global",
        "offset": "5",
        "offsetType": "num",
        "offsetMultiplier": 1000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "1,2,3,4,5",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 550,
        "y": 840,
        "wires": [
            [
                "ac735291685f7021",
                "68e544609342c4b8",
                "f5f26648fe24ff3b"
            ]
        ]
    },
    {
        "id": "68e544609342c4b8",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "ad668695f02ae062"
            ]
        ]
    },
    {
        "id": "f5f26648fe24ff3b",
        "type": "delay",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 800,
        "wires": [
            [
                "4dd1bbe994c3b52f"
            ]
        ]
    },
    {
        "id": "8d53700361a8d8ba",
        "type": "countula",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Counter",
        "x": 1080,
        "y": 760,
        "wires": [
            [],
            [
                "c485baf2dbc34784"
            ]
        ]
    },
    {
        "id": "d7df4ca601759750",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 760,
        "wires": []
    },
    {
        "id": "8c50a50d865f61ce",
        "type": "udp out",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "to Dragonframe",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "",
        "outport": "2222",
        "base64": false,
        "multicast": "false",
        "x": 1620,
        "y": 540,
        "wires": []
    },
    {
        "id": "0fb5a9bb5160bba9",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "dfPort",
        "links": [
            "5b745e71205304b9"
        ],
        "x": 1465,
        "y": 480,
        "wires": [
            [
                "8c50a50d865f61ce"
            ]
        ]
    },
    {
        "id": "93aad228810673ba",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Dragonframe lost Comm",
        "link": "",
        "director": "0f9b22e2b168f267",
        "resendLast": false,
        "x": 810,
        "y": 920,
        "wires": [
            [
                "aa69fab8dd6d1c40"
            ]
        ]
    },
    {
        "id": "0b284b36f48fb3dd",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "set computerUpTime",
        "rules": [
            {
                "t": "set",
                "p": "computerUpTime",
                "pt": "global",
                "to": "payload.uptime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "55f90c3aae5f59ed",
        "type": "Uptime",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "",
        "x": 740,
        "y": 140,
        "wires": [
            [
                "0b284b36f48fb3dd"
            ]
        ]
    },
    {
        "id": "f15c94f47ebaa145",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "55f90c3aae5f59ed",
                "1fa798ef9e399169",
                "44d4ec20d44a2314"
            ]
        ]
    },
    {
        "id": "1fa798ef9e399169",
        "type": "Drives",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "",
        "x": 730,
        "y": 180,
        "wires": [
            [
                "ee81464a8e7ce0bc"
            ]
        ]
    },
    {
        "id": "ee81464a8e7ce0bc",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "set HD space variables",
        "rules": [
            {
                "t": "set",
                "p": "availSpace",
                "pt": "global",
                "to": "payload[0].available",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 180,
        "wires": [
            [
                "93637364dedb7624"
            ]
        ]
    },
    {
        "id": "688f10d6edfb3084",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Shooting Hours",
        "func": "let numStartTime = parseInt(global.get('startTime'), 10);\nlet numEndTime = parseInt(global.get('endTime'), 10);\n\nmsg.payload = shootHours = numEndTime - numStartTime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "b8cfb59c1c31dde7"
            ]
        ]
    },
    {
        "id": "744fb39301e3cb89",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Hours a day",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e80123f0211fb519",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 650,
        "y": 1080,
        "wires": [
            [
                "688f10d6edfb3084",
                "32abb38f14b3ca0e",
                "418ef16dd3aedbed"
            ]
        ]
    },
    {
        "id": "b8cfb59c1c31dde7",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "set shootHours variable",
        "rules": [
            {
                "t": "set",
                "p": "shootHours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1040,
        "wires": [
            [
                "744fb39301e3cb89"
            ]
        ]
    },
    {
        "id": "32abb38f14b3ca0e",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Frames a day",
        "func": "let framesHour = parseInt(60/global.get('interval'), 10);\n\nmsg.payload = global.get('shootHours')*framesHour;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "b348c9ad8bdb872e"
            ]
        ]
    },
    {
        "id": "b348c9ad8bdb872e",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "set framesDay variable",
        "rules": [
            {
                "t": "set",
                "p": "framesDay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1080,
        "wires": [
            [
                "d06f29162b479201"
            ]
        ]
    },
    {
        "id": "d06f29162b479201",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Frames per day",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 1080,
        "wires": []
    },
    {
        "id": "418ef16dd3aedbed",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Data Calculations",
        "func": "let interval = global.get('interval'); //time in minutes\nlet startHour = parseInt(global.get('startTime')); //military time integer\nlet endHour = parseInt(global.get('endTime'));//military time integer\nlet weekDays = 5; // 1-7\nlet frameSize = global.get('fileSize'); //Frame size in Mb\nlet dailyHours = endHour - startHour;\nlet cameras = 2; //number of cameras\n\nlet dailyFrames = (dailyHours*60)/interval;\nlet monthlyFrames = (dailyFrames*weekDays)*4\n\nlet dailyDownload = (dailyFrames*frameSize)/1024; //Size in Gb\nlet weeklyDownload = (dailyFrames*weekDays)*frameSize/1024; //Size in Gb\nlet monthlyDownload = (monthlyFrames*frameSize)/1024; //Size in Gb\n\nmsg.payload = {\n\n    DailyFrames: dailyFrames,\n    MonthlyFrames: monthlyFrames,\n    DailyDownload_Gb: parseFloat(dailyDownload.toFixed(1)),\n    WeeklyDownload_Gb: parseFloat(weeklyDownload.toFixed(1)),\n    MonthlyDownload_Gb: parseFloat(monthlyDownload.toFixed(1)),\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "a8e7c705f5059430"
            ]
        ]
    },
    {
        "id": "a8e7c705f5059430",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "8ff9f23da2ccc134",
        "name": "Calculations",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1120,
        "wires": []
    },
    {
        "id": "44d4ec20d44a2314",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "Data Calculations",
        "func": "let interval = global.get('interval'); //time in minutes\nlet startHour = parseInt(global.get('startTime')); //military time integer\nlet endHour = parseInt(global.get('endTime'));//military time integer\nlet weekDays = 5; // 1-7\nlet frameSize = global.get('fileSize'); //Frame size in Mb\nlet dailyHours = endHour - startHour;\n\nlet dailyFrames = (dailyHours*60)/interval;\nlet monthlyFrames = (dailyFrames*weekDays)*4\n\nlet dailyDownload = (dailyFrames*frameSize)/1024; //Size in Gb\nlet weeklyDownload = (dailyFrames*weekDays)*frameSize/1024; //Size in Gb\nlet monthlyDownload = (monthlyFrames*frameSize)/1024; //Size in Gb\n\nmsg.payload = {\n\n    DailyFrames: dailyFrames,\n    MonthlyFrames: monthlyFrames,\n    DailyDownload_Gb: parseFloat(dailyDownload.toFixed(1)),\n    WeeklyDownload_Gb: parseFloat(weeklyDownload.toFixed(1)),\n    MonthlyDownload_Gb: parseFloat(monthlyDownload.toFixed(1)),\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "a538d555759315e8"
            ]
        ]
    },
    {
        "id": "a538d555759315e8",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "Calculations",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "8f2484fb1544823e",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "Dragonframe sends \"Hello\"handshake every 20 sec",
        "info": "",
        "x": 290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b0e7814b358d33ed",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "frameComplete",
        "info": "event: \"frameComplete\"\nexposure: 1\nexposureName: \"X1\"\nframe: 35\nimageFileName: \"\"\nproduction: \"Test\"\nscene: \"002\"\nstereoIndex: 0\ntake: \"01\"",
        "x": 180,
        "y": 1085,
        "wires": []
    },
    {
        "id": "c431111496bac673",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "Capture State",
        "info": "event: \"captureState\"\nreadyToCapture: false\nstate: \"READY\"\n\n\nevent: \"captureState\"\nreadyToCapture: false\nstate: \"SHOOTING\"\n\n\nevent: \"captureState\"\nreadyToCapture: true\nstate: \"READY\"",
        "x": 350,
        "y": 1085,
        "wires": []
    },
    {
        "id": "7df5f26e788032bf",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "Shoot",
        "info": "event: \"shoot\"\nexposure: 1\nexposureName: \"X1\"\nframe: 35\nproduction: \"Test\"\nscene: \"002\"\nstereoIndex: 0\ntake: \"01\"",
        "x": 270,
        "y": 1130,
        "wires": []
    },
    {
        "id": "a521d58dfaba0a70",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "Events",
        "info": "hello\n    maxVersion: 1\n    minVersion: 1\n\ncaptureState\n    readyToCapture: true|false\n    \ncaptureComplete\n    exposure: 1   \n    imageFileName: \"xxxxx\"\n    \nframeComplete\n    exposure: 1\n\nposition\n    exposure: 1",
        "x": 150,
        "y": 1130,
        "wires": []
    },
    {
        "id": "1d6172b039713461",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "Rebel 28Mb",
        "info": "",
        "x": 170,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c6f81929fc80f8a0",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "c7a36f579ef38092",
        "name": "60D 24Mb",
        "info": "",
        "x": 320,
        "y": 1180,
        "wires": []
    },
    {
        "id": "42efc50dc3b35f93",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "863b058e4531a951",
        "name": "Path to settings file",
        "props": [
            {
                "p": "filename",
                "v": "/Users/pato/Dropbox/Point72_Camera_Settings/test_settings.json",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "1aaaa58301c51c4e"
            ]
        ]
    },
    {
        "id": "1aaaa58301c51c4e",
        "type": "link out",
        "z": "20ac8dd407885f5d",
        "g": "863b058e4531a951",
        "name": "Dropbox path",
        "mode": "link",
        "links": [
            "e3982fe56a8fbd8f"
        ],
        "x": 375,
        "y": 80,
        "wires": []
    },
    {
        "id": "e3982fe56a8fbd8f",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "Dropbox path",
        "links": [
            "1aaaa58301c51c4e"
        ],
        "x": 495,
        "y": 80,
        "wires": [
            [
                "65eea3b9086e805a"
            ]
        ]
    },
    {
        "id": "3660e5040e9c3133",
        "type": "delay",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 700,
        "wires": [
            [
                "96d34eae343acaac"
            ]
        ]
    },
    {
        "id": "05f44cf939c27c36",
        "type": "subflow:b45223fa5af84c34",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "Camera Settings Parsing",
        "x": 910,
        "y": 80,
        "wires": [
            [
                "3a04eadae0a74ea8"
            ]
        ]
    },
    {
        "id": "3a04eadae0a74ea8",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "93637364dedb7624",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "a42ca3454e649528",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 180,
        "wires": []
    },
    {
        "id": "2ceda70b0987df09",
        "type": "watch-directory",
        "z": "20ac8dd407885f5d",
        "folder": "/Users/pato/Dropbox/Test_002.dgn",
        "recursive": "3",
        "typeEvent": "create",
        "ignoreInitial": true,
        "ignoredFiles": ".tiff",
        "ignoredFilesType": "re",
        "name": "",
        "x": 1400,
        "y": 80,
        "wires": [
            [
                "eab8ee1c56a907a7"
            ]
        ]
    },
    {
        "id": "eab8ee1c56a907a7",
        "type": "image viewer",
        "z": "20ac8dd407885f5d",
        "name": "",
        "width": "320",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 1330,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fe621f2cae711311",
        "type": "watch-directory",
        "z": "f20a80c5c0dfd286",
        "folder": "/Users/pato/Dropbox/Test_002.dgn",
        "recursive": "3",
        "typeEvent": "create",
        "ignoreInitial": true,
        "ignoredFiles": ".tiff",
        "ignoredFilesType": "re",
        "name": "",
        "x": 280,
        "y": 320,
        "wires": [
            [
                "c47ae141ea9e1407",
                "0765da00821229ca"
            ]
        ]
    },
    {
        "id": "c47ae141ea9e1407",
        "type": "debug",
        "z": "f20a80c5c0dfd286",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "0765da00821229ca",
        "type": "image viewer",
        "z": "f20a80c5c0dfd286",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    }
]