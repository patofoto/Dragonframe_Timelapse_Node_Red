[
    {
        "id": "b1ca81c2f04dcad4",
        "type": "tab",
        "label": "Set Up",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20ac8dd407885f5d",
        "type": "tab",
        "label": "Dragonframe_Int",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f4aaa9f87211afb",
        "type": "subflow",
        "name": "Message from Dragonframe",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "384db60c452cd757"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "f6404371790ba258",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 140,
                "wires": [
                    {
                        "id": "08559261273fd7dd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 200,
                "wires": [
                    {
                        "id": "94507ce7ac3a5464",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 260,
                "wires": [
                    {
                        "id": "6b718d3e9b8d1c73",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 320,
                "wires": [
                    {
                        "id": "b86d8b418a6b12f8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9bb44f6703637248",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Intervalometer",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "8f763fcfa9a2d554",
            "4a5a8d6cd7ad3256",
            "ca9db2b297167bc6",
            "95162f2031c7c733",
            "edd2e6c375c6198e",
            "5b745e71205304b9"
        ],
        "x": 34,
        "y": 19,
        "w": 762,
        "h": 182
    },
    {
        "id": "0bb745afc23d0509",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Intervalometer Setup",
        "style": {
            "label": true,
            "color": "#000000",
            "label-position": "n",
            "fill": "#ffffff"
        },
        "nodes": [
            "46d78d863bf40c19",
            "e04c5893018bb8f9",
            "f155cd0a6b510828",
            "1783358b9ae93b5b",
            "eb4444322a75b3c1",
            "681a21428075b6f9",
            "736dd74c72d2a204",
            "96425f00a551e968",
            "0e4f9f21c44e4155",
            "191c1d8ffa34bbe6",
            "3bcbb20cdf28833c",
            "4c14d19363082c7c"
        ],
        "x": 34,
        "y": 219,
        "w": 572,
        "h": 202
    },
    {
        "id": "fc95a5364964861e",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Communication from Dragonframe",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "777c711320926b28",
            "291068297d309ff4",
            "f796e60ca7ad161d",
            "aa69fab8dd6d1c40",
            "8e2ec8c8916bdf24",
            "06b7e743d486e5ec",
            "83558a2d4dd1ec39",
            "7766a80f579491d0",
            "1299a236e72220b3",
            "406cc4d760a0a25a",
            "6a8302e07e51c516",
            "5b9f30ef3294e253",
            "250d8277323b0835",
            "4406adeb35e5e2e7",
            "96d34eae343acaac",
            "ad668695f02ae062",
            "4dd1bbe994c3b52f",
            "6edae490f780c504",
            "c485baf2dbc34784",
            "fd41d6ae3f2edbdf",
            "d5010ddcf1962b6b",
            "a54d238e37f49a60",
            "ac735291685f7021",
            "dad9def59723f79b",
            "603cd39c5c9e7e12",
            "68e544609342c4b8",
            "f5f26648fe24ff3b",
            "8d53700361a8d8ba",
            "d7df4ca601759750",
            "2bbd39311ee7a069",
            "8c50a50d865f61ce",
            "0fb5a9bb5160bba9"
        ],
        "x": 34,
        "y": 439,
        "w": 1852,
        "h": 542
    },
    {
        "id": "728af4eea16d05c3",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Calculations",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "8b46c3288f3c192f",
            "4bd131d11e5656df",
            "7343288e0a5c8760",
            "ed4deacfc469ea0f",
            "eb40f576e817ee93",
            "2be5d300b13c3936",
            "6fa3553b068fe207",
            "ac0e05234a14655c",
            "4871b344d6671ecf",
            "eef13addb5939a98",
            "1468539339414676",
            "c1ceaa231f70e595",
            "14736c5d8fc2fce6",
            "583a423cd7a9e971",
            "918751fa42cebd85"
        ],
        "x": 814,
        "y": 79,
        "w": 892,
        "h": 242
    },
    {
        "id": "66d748d8b763e343",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Alive Heartbeat Message",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "869fa2a8fa523984",
            "d2d9a905d0204ceb",
            "3c8e30648efc73b8",
            "36afaf5c0128c993"
        ],
        "x": 634,
        "y": 339,
        "w": 752,
        "h": 82
    },
    {
        "id": "e86b7e85ec7e628e",
        "type": "group",
        "z": "20ac8dd407885f5d",
        "name": "Notes",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1f80a68806d157b6",
            "fb159ba299d590e7",
            "dc4fb9cd4aca1e50",
            "5efad5f13ccddc1d",
            "d1e27294d49c58e8"
        ],
        "x": 34,
        "y": 999,
        "w": 432,
        "h": 172
    },
    {
        "id": "bdd30934fab20f76",
        "type": "group",
        "z": "b1ca81c2f04dcad4",
        "name": "Intervalometer",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "09a28c394e1ad440",
            "d9d7ea72c7e079dc",
            "5fc4f5f87de38afb",
            "6f64efcdc791e39c",
            "beccddc992f6cfbd",
            "be24dd8189481830",
            "412bc206bcf4755c",
            "566508d582d9ca7e",
            "4fd8572e540f0b6d",
            "09ae81d09c077154",
            "70b986f801f2d36c",
            "e8585acc2fab7ffd",
            "fd291cf60bf80b78"
        ],
        "x": 74,
        "y": 59,
        "w": 362,
        "h": 322
    },
    {
        "id": "d9f935c786fedbad",
        "type": "group",
        "z": "b1ca81c2f04dcad4",
        "name": "Calculations",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9a22c9ce666839c3",
            "1bc7f71706ceea1d"
        ],
        "x": 494,
        "y": 199,
        "w": 362,
        "h": 82
    },
    {
        "id": "eb1500eb239e6526",
        "type": "group",
        "z": "b1ca81c2f04dcad4",
        "name": "Alive Listener Configuration",
        "style": {
            "fill": "#ffffff",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8f6e305b656ef1d1",
            "59d2852f08fdfa93",
            "2caed68993d32ffe",
            "a910c3cc4f077abc"
        ],
        "x": 494,
        "y": 59,
        "w": 472,
        "h": 122
    },
    {
        "id": "753a188897bcf967",
        "type": "group",
        "z": "b1ca81c2f04dcad4",
        "name": "Testing",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f465b58ced62aa08",
            "ce7d54d2d3ddbd6d",
            "a7a7e873ba3f26aa",
            "1fcd3b55c321da25",
            "3d699c0e9cf3ba43",
            "9a153fed4834e1b5",
            "413f398f8b246afd",
            "20d1b381141749a0",
            "62a79b1eeecdbfcf",
            "01c9118824ba88a2",
            "3ac229cfaf20bbfe",
            "34200b309889cce5"
        ],
        "x": 74,
        "y": 419,
        "w": 1032,
        "h": 162
    },
    {
        "id": "6f2ee2563c258dce",
        "type": "position-config",
        "name": "",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12",
        "contextStore": ""
    },
    {
        "id": "f52ae91beb2ca245",
        "type": "telegram bot",
        "botname": "@patofoto_bot",
        "usernames": "patosuarez",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "none",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": true
    },
    {
        "id": "384db60c452cd757",
        "type": "json",
        "z": "1f4aaa9f87211afb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "08559261273fd7dd",
                "94507ce7ac3a5464",
                "6b718d3e9b8d1c73",
                "f6404371790ba258",
                "b86d8b418a6b12f8"
            ]
        ]
    },
    {
        "id": "08559261273fd7dd",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "captureState",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "captureState",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "94507ce7ac3a5464",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "captureComplete",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "captureComplete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6b718d3e9b8d1c73",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "frameComplete",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "frameComplete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f6404371790ba258",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "hello",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hello",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b86d8b418a6b12f8",
        "type": "switch",
        "z": "1f4aaa9f87211afb",
        "name": "position",
        "property": "payload.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "position",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "09a28c394e1ad440",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Interval in Minutes",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "be24dd8189481830"
            ]
        ]
    },
    {
        "id": "d9d7ea72c7e079dc",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Camera Name",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Test Camera",
        "payloadType": "str",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "beccddc992f6cfbd"
            ]
        ]
    },
    {
        "id": "5fc4f5f87de38afb",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Start Time",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6:00",
        "payloadType": "str",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "412bc206bcf4755c"
            ]
        ]
    },
    {
        "id": "6f64efcdc791e39c",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "End Time",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "17:00",
        "payloadType": "str",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "566508d582d9ca7e"
            ]
        ]
    },
    {
        "id": "9a22c9ce666839c3",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "d9f935c786fedbad",
        "name": "File Size per frame in Mb",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6.2",
        "payloadType": "num",
        "x": 650,
        "y": 240,
        "wires": [
            [
                "1bc7f71706ceea1d"
            ]
        ]
    },
    {
        "id": "beccddc992f6cfbd",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Camera Name",
        "mode": "link",
        "links": [
            "0e4f9f21c44e4155"
        ],
        "x": 395,
        "y": 100,
        "wires": []
    },
    {
        "id": "be24dd8189481830",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Interval",
        "mode": "link",
        "links": [
            "191c1d8ffa34bbe6"
        ],
        "x": 395,
        "y": 140,
        "wires": []
    },
    {
        "id": "412bc206bcf4755c",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Start Time",
        "mode": "link",
        "links": [
            "3bcbb20cdf28833c"
        ],
        "x": 395,
        "y": 180,
        "wires": []
    },
    {
        "id": "566508d582d9ca7e",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "End Time",
        "mode": "link",
        "links": [
            "4c14d19363082c7c"
        ],
        "x": 395,
        "y": 220,
        "wires": []
    },
    {
        "id": "1bc7f71706ceea1d",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "d9f935c786fedbad",
        "name": "File Size",
        "mode": "link",
        "links": [
            "c1ceaa231f70e595"
        ],
        "x": 815,
        "y": 240,
        "wires": []
    },
    {
        "id": "8f6e305b656ef1d1",
        "type": "change",
        "z": "b1ca81c2f04dcad4",
        "g": "eb1500eb239e6526",
        "name": "set alivePort variable",
        "rules": [
            {
                "t": "set",
                "p": "alivePort",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "59d2852f08fdfa93",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "eb1500eb239e6526",
        "name": "Alive Comm Port",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "65515",
        "payloadType": "num",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "8f6e305b656ef1d1"
            ]
        ]
    },
    {
        "id": "2caed68993d32ffe",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "eb1500eb239e6526",
        "name": "Listener IP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "74.108.21.213",
        "payloadType": "str",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "a910c3cc4f077abc"
            ]
        ]
    },
    {
        "id": "a910c3cc4f077abc",
        "type": "change",
        "z": "b1ca81c2f04dcad4",
        "g": "eb1500eb239e6526",
        "name": "set ipListen variable",
        "rules": [
            {
                "t": "set",
                "p": "ipListen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f465b58ced62aa08",
        "type": "function",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "JSON Data",
        "func": "let cameraName = global.get('camName');\nlet interval = global.get('interval'); //time in minutes\nlet startHour = parseInt(global.get('startTime')); //military time integer\nlet endHour = parseInt(global.get('endTime'));//military time integer\nlet weekDays = global.get('weekDays'); // 1-7\nlet frameSize = global.get('fileSize'); //Frame size in Mb\nlet dailyHours = endHour - startHour;\nlet currentCount = global.get('currentFrame'); //curent number of frames in shot\nlet currentDailyShot = global.get('dailyCounter'); //current daily frame shot\nconst d = new Date();\nlet time = d.getTime();\n\n\n\nlet data = {\n    camera_name: cameraName,\n    interval_min: interval,\n    time_start_24: startHour,\n    time_end_24: endHour,\n    current_total_frames: currentCount,\n    current_daily_frame: currentDailyShot,\n    current_shot_size_Gb: (currentCount/1024).toFixed(2),\n    current_shot_time: time,\n}\n\nmsg.payload = JSON.stringify(data);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 460,
        "wires": [
            [
                "a7a7e873ba3f26aa"
            ]
        ]
    },
    {
        "id": "ce7d54d2d3ddbd6d",
        "type": "debug",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "a7a7e873ba3f26aa",
        "type": "file",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "Write to Dropbox",
        "filename": "/Users/pato/Dropbox/test_camera_dragonframe_nodered_data.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 570,
        "y": 460,
        "wires": [
            [
                "20d1b381141749a0"
            ]
        ]
    },
    {
        "id": "1fcd3b55c321da25",
        "type": "file in",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "Read from Dropbox",
        "filename": "/Users/pato/Dropbox/test_camera_dragonframe_nodered_data.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 500,
        "wires": [
            [
                "3d699c0e9cf3ba43"
            ]
        ]
    },
    {
        "id": "3d699c0e9cf3ba43",
        "type": "json",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 500,
        "wires": [
            [
                "ce7d54d2d3ddbd6d",
                "3ac229cfaf20bbfe"
            ]
        ]
    },
    {
        "id": "9a153fed4834e1b5",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "1fcd3b55c321da25"
            ]
        ]
    },
    {
        "id": "413f398f8b246afd",
        "type": "link in",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "Camera Triggered",
        "links": [
            "603cd39c5c9e7e12"
        ],
        "x": 135,
        "y": 460,
        "wires": [
            [
                "f465b58ced62aa08"
            ]
        ]
    },
    {
        "id": "4fd8572e540f0b6d",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Number of days of week",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "09ae81d09c077154"
            ]
        ]
    },
    {
        "id": "09ae81d09c077154",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "Number of days in week",
        "mode": "link",
        "links": [
            "14736c5d8fc2fce6"
        ],
        "x": 395,
        "y": 260,
        "wires": []
    },
    {
        "id": "20d1b381141749a0",
        "type": "debug",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "62a79b1eeecdbfcf",
        "type": "link out",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "mode": "link",
        "links": [
            "95162f2031c7c733"
        ],
        "x": 315,
        "y": 540,
        "wires": []
    },
    {
        "id": "01c9118824ba88a2",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "Manual Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"command\" : \"shoot\", \"frames\" : 1 }",
        "payloadType": "str",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "62a79b1eeecdbfcf"
            ]
        ]
    },
    {
        "id": "8d8436b99f874fcb",
        "type": "comment",
        "z": "b1ca81c2f04dcad4",
        "name": "Rebel 28Mb",
        "info": "",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "224531824cf12c1d",
        "type": "comment",
        "z": "b1ca81c2f04dcad4",
        "name": "60D 24Mb",
        "info": "",
        "x": 940,
        "y": 260,
        "wires": []
    },
    {
        "id": "34200b309889cce5",
        "type": "debug",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "3ac229cfaf20bbfe",
        "type": "moment",
        "z": "b1ca81c2f04dcad4",
        "g": "753a188897bcf967",
        "name": "",
        "topic": "",
        "input": "current_shot_time",
        "inputType": "msg",
        "inTz": "America/New_York",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "LLL",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "America/New_York",
        "x": 800,
        "y": 540,
        "wires": [
            [
                "34200b309889cce5"
            ]
        ]
    },
    {
        "id": "70b986f801f2d36c",
        "type": "break director",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "UDP Comms",
        "actors": "",
        "inputType": "msg",
        "inputValue": "payload",
        "lockType": "bool",
        "lockValue": "true",
        "unlockType": "else",
        "unlockValue": "false",
        "defaultState": true,
        "useTimeOut": false,
        "timeOut": "30",
        "timeOutUnit": "s",
        "x": 330,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e8585acc2fab7ffd",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "70b986f801f2d36c"
            ]
        ]
    },
    {
        "id": "fd291cf60bf80b78",
        "type": "inject",
        "z": "b1ca81c2f04dcad4",
        "g": "bdd30934fab20f76",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "70b986f801f2d36c"
            ]
        ]
    },
    {
        "id": "8f763fcfa9a2d554",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Intervalometer",
        "nameInt": "global.startTime - global.endTime[Mon-Fri] =... ↻",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "{ \"command\" : \"shoot\", \"frames\" : 1 }",
                "vt": "str",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "interval-time",
        "intervalCount": "interval",
        "intervalCountType": "global",
        "intervalCountMultiplier": 60000,
        "time": "startTime",
        "timeType": "global",
        "offset": 0,
        "offsetType": "none",
        "offsetMultiplier": 60000,
        "timeEnd": "endTime",
        "timeEndType": "global",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "1,2,3,4,5",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "edd2e6c375c6198e"
            ]
        ]
    },
    {
        "id": "777c711320926b28",
        "type": "udp in",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "from Dragonframe",
        "iface": "",
        "port": "8888",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "f796e60ca7ad161d",
                "fd41d6ae3f2edbdf",
                "d7df4ca601759750"
            ]
        ]
    },
    {
        "id": "291068297d309ff4",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Connection alive message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 900,
        "wires": []
    },
    {
        "id": "f796e60ca7ad161d",
        "type": "timeout",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Lost Dragonframe Comm Timer",
        "outtopic": "dragonframe",
        "outsafe": "1",
        "outwarning": "Warning",
        "outunsafe": "0",
        "warning": "5",
        "timer": "60",
        "repeat": false,
        "again": true,
        "x": 430,
        "y": 920,
        "wires": [
            [
                "2bbd39311ee7a069"
            ]
        ]
    },
    {
        "id": "aa69fab8dd6d1c40",
        "type": "switch",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 920,
        "wires": [
            [
                "291068297d309ff4"
            ],
            [
                "8e2ec8c8916bdf24"
            ]
        ]
    },
    {
        "id": "8e2ec8c8916bdf24",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Disconnected Message",
        "func": "msg.payload = {\n    content:`Dragonframe from ${global.get('camName')} is offline`,\n    type: \"message\",\n    chatId: 1951007350\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 940,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "06b7e743d486e5ec",
        "type": "telegram sender",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "bot": "f52ae91beb2ca245",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1540,
        "y": 820,
        "wires": [
            [
                "83558a2d4dd1ec39"
            ]
        ]
    },
    {
        "id": "83558a2d4dd1ec39",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Message to Telegram",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.content.text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 820,
        "wires": []
    },
    {
        "id": "7766a80f579491d0",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "captureState",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "1299a236e72220b3",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "captureComplete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "406cc4d760a0a25a",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "position",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "4a5a8d6cd7ad3256",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Manual Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"command\" : \"shoot\", \"frames\" : 1 }",
        "payloadType": "str",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "ca9db2b297167bc6"
            ]
        ]
    },
    {
        "id": "6a8302e07e51c516",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "frameComplete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 640,
        "wires": []
    },
    {
        "id": "46d78d863bf40c19",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Display Interval",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 300,
        "wires": []
    },
    {
        "id": "e04c5893018bb8f9",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "interval Variable",
        "rules": [
            {
                "t": "set",
                "p": "interval",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "46d78d863bf40c19"
            ]
        ]
    },
    {
        "id": "5b9f30ef3294e253",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "set dfPort variable",
        "rules": [
            {
                "t": "set",
                "p": "dfport",
                "pt": "global",
                "to": "port",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 520,
        "wires": [
            [
                "8c50a50d865f61ce"
            ]
        ]
    },
    {
        "id": "250d8277323b0835",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Hello",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 480,
        "wires": []
    },
    {
        "id": "ca9db2b297167bc6",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "use dfport variable",
        "rules": [
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "dfport",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "5b745e71205304b9"
            ]
        ]
    },
    {
        "id": "4406adeb35e5e2e7",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "set currentFrame variable",
        "rules": [
            {
                "t": "set",
                "p": "currentFrame",
                "pt": "global",
                "to": "payload.frame",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 640,
        "wires": [
            [
                "6a8302e07e51c516",
                "603cd39c5c9e7e12"
            ]
        ]
    },
    {
        "id": "f155cd0a6b510828",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "startTime Variable",
        "rules": [
            {
                "t": "set",
                "p": "startTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 340,
        "wires": [
            [
                "1783358b9ae93b5b"
            ]
        ]
    },
    {
        "id": "1783358b9ae93b5b",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Display Start Time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "eb4444322a75b3c1",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "endTime Variable",
        "rules": [
            {
                "t": "set",
                "p": "endTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "681a21428075b6f9"
            ]
        ]
    },
    {
        "id": "681a21428075b6f9",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Display End Time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "96d34eae343acaac",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Format message for Telegram",
        "func": "msg.payload = {\n    content: `Shot frame ${global.get('dailyCounter')} of total frames ${global.get('currentFrame')} from ${global.get('camName')}`,\n    type: \"message\",\n    chatId: 1951007350,\n\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "ad668695f02ae062",
        "type": "trigger",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1020,
        "y": 700,
        "wires": [
            [
                "96d34eae343acaac"
            ]
        ]
    },
    {
        "id": "4dd1bbe994c3b52f",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RESET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 800,
        "wires": [
            [
                "8d53700361a8d8ba"
            ]
        ]
    },
    {
        "id": "6edae490f780c504",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Daily Counter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 760,
        "wires": []
    },
    {
        "id": "736dd74c72d2a204",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "camName Variable",
        "rules": [
            {
                "t": "set",
                "p": "camName",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "96425f00a551e968"
            ]
        ]
    },
    {
        "id": "96425f00a551e968",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "c485baf2dbc34784",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Daily Counter Variable",
        "rules": [
            {
                "t": "set",
                "p": "dailyCounter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "6edae490f780c504"
            ]
        ]
    },
    {
        "id": "fd41d6ae3f2edbdf",
        "type": "subflow:1f4aaa9f87211afb",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "d5010ddcf1962b6b",
                "5b9f30ef3294e253"
            ],
            [
                "7766a80f579491d0"
            ],
            [
                "1299a236e72220b3"
            ],
            [
                "4406adeb35e5e2e7",
                "ad668695f02ae062",
                "8d53700361a8d8ba"
            ],
            [
                "406cc4d760a0a25a"
            ]
        ],
        "inputLabels": [
            "UDP from port 8888"
        ],
        "outputLabels": [
            "Hello",
            "captureState",
            "captureComplete",
            "frameComplete",
            "position"
        ]
    },
    {
        "id": "d5010ddcf1962b6b",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Hello Event",
        "func": "msg.payload = {\n    command: msg.payload.event,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            [
                "a54d238e37f49a60"
            ]
        ]
    },
    {
        "id": "a54d238e37f49a60",
        "type": "json",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "250d8277323b0835",
                "8c50a50d865f61ce"
            ]
        ]
    },
    {
        "id": "869fa2a8fa523984",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "",
        "nameInt": "timestamp ↻30s",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "date",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "interval",
        "intervalCount": "30",
        "intervalCountType": "num",
        "intervalCountMultiplier": 1000,
        "time": "",
        "timeType": "entered",
        "offset": 0,
        "offsetType": "none",
        "offsetMultiplier": 60000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 760,
        "y": 380,
        "wires": [
            [
                "3c8e30648efc73b8"
            ]
        ]
    },
    {
        "id": "d2d9a905d0204ceb",
        "type": "udp out",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1310,
        "y": 380,
        "wires": []
    },
    {
        "id": "8c50a50d865f61ce",
        "type": "udp out",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "to Dragonframe",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "",
        "outport": "2222",
        "base64": false,
        "multicast": "false",
        "x": 1720,
        "y": 580,
        "wires": []
    },
    {
        "id": "3c8e30648efc73b8",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "Alive Message",
        "func": "msg.payload = `${global.get('camName')} is alive`;\nmsg.port = global.get('alivePort');\nmsg.ip = global.get('ipListen');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            [
                "36afaf5c0128c993"
            ]
        ]
    },
    {
        "id": "8b46c3288f3c192f",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Shooting Hours",
        "func": "let numStartTime = parseInt(global.get('startTime'), 10);\nlet numEndTime = parseInt(global.get('endTime'), 10);\n\nmsg.payload = shootHours = numEndTime - numStartTime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "ed4deacfc469ea0f"
            ]
        ]
    },
    {
        "id": "4bd131d11e5656df",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Hours a day",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 120,
        "wires": []
    },
    {
        "id": "7343288e0a5c8760",
        "type": "inject",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 930,
        "y": 160,
        "wires": [
            [
                "8b46c3288f3c192f",
                "eb40f576e817ee93",
                "ac0e05234a14655c"
            ]
        ]
    },
    {
        "id": "ed4deacfc469ea0f",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "set shootHours variable",
        "rules": [
            {
                "t": "set",
                "p": "shootHours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 120,
        "wires": [
            [
                "4bd131d11e5656df"
            ]
        ]
    },
    {
        "id": "eb40f576e817ee93",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Frames a day",
        "func": "let framesHour = parseInt(60/global.get('interval'), 10);\n\nmsg.payload = global.get('shootHours')*framesHour;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 160,
        "wires": [
            [
                "2be5d300b13c3936"
            ]
        ]
    },
    {
        "id": "2be5d300b13c3936",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "set framesDay variable",
        "rules": [
            {
                "t": "set",
                "p": "framesDay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 160,
        "wires": [
            [
                "6fa3553b068fe207"
            ]
        ]
    },
    {
        "id": "6fa3553b068fe207",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Frames per day",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 160,
        "wires": []
    },
    {
        "id": "ac735291685f7021",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Last Frame Message",
        "func": "let expectedFrames = global.get('framesDay');\nlet shotFrames = global.get('dailyCounter');\nlet cameraName = global.get('camName');\n\nif (expectedFrames===shotFrames){\n    msg.payload = {\n    content:`All frames shot today from ${cameraName}`,\n    type: \"message\",\n    chatId: 1951007350,\n};\n} else {\n    msg.payload = {\n    content:`Frame count not as expected from ${cameraName}`,\n    type: \"message\",\n    chatId: 1951007350,\n};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "06b7e743d486e5ec"
            ]
        ]
    },
    {
        "id": "dad9def59723f79b",
        "type": "time-inject",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "End of day trigger",
        "nameInt": "⏲ global.endTime[Mon-Fri] = timestamp",
        "positionConfig": "6f2ee2563c258dce",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "date",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": "*",
                "months": "*",
                "onlyOddDays": false,
                "onlyEvenDays": false,
                "onlyOddWeeks": false,
                "onlyEvenWeeks": false
            }
        ],
        "injectTypeSelect": "time",
        "intervalCount": 1,
        "intervalCountType": "num",
        "intervalCountMultiplier": 60000,
        "time": "endTime",
        "timeType": "global",
        "offset": "",
        "offsetType": "none",
        "offsetMultiplier": 1000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "1,2,3,4,5",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeOnlyOddWeeks": false,
        "timeOnlyEvenWeeks": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltOnlyOddWeeks": false,
        "timeAltOnlyEvenWeeks": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 450,
        "y": 840,
        "wires": [
            [
                "ac735291685f7021",
                "68e544609342c4b8",
                "f5f26648fe24ff3b"
            ]
        ]
    },
    {
        "id": "1f80a68806d157b6",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "e86b7e85ec7e628e",
        "name": "Dragonframe sends \"Hello\"handshake every 20 sec",
        "info": "",
        "x": 250,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fb159ba299d590e7",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "e86b7e85ec7e628e",
        "name": "frameComplete",
        "info": "event: \"frameComplete\"\nexposure: 1\nexposureName: \"X1\"\nframe: 35\nimageFileName: \"\"\nproduction: \"Test\"\nscene: \"002\"\nstereoIndex: 0\ntake: \"01\"",
        "x": 140,
        "y": 1085,
        "wires": []
    },
    {
        "id": "dc4fb9cd4aca1e50",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "e86b7e85ec7e628e",
        "name": "Capture State",
        "info": "event: \"captureState\"\nreadyToCapture: false\nstate: \"READY\"\n\n\nevent: \"captureState\"\nreadyToCapture: false\nstate: \"SHOOTING\"\n\n\nevent: \"captureState\"\nreadyToCapture: true\nstate: \"READY\"",
        "x": 310,
        "y": 1085,
        "wires": []
    },
    {
        "id": "5efad5f13ccddc1d",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "e86b7e85ec7e628e",
        "name": "Shoot",
        "info": "event: \"shoot\"\nexposure: 1\nexposureName: \"X1\"\nframe: 35\nproduction: \"Test\"\nscene: \"002\"\nstereoIndex: 0\ntake: \"01\"",
        "x": 230,
        "y": 1130,
        "wires": []
    },
    {
        "id": "d1e27294d49c58e8",
        "type": "comment",
        "z": "20ac8dd407885f5d",
        "g": "e86b7e85ec7e628e",
        "name": "Events",
        "info": "hello\n    maxVersion: 1\n    minVersion: 1\n\ncaptureState\n    readyToCapture: true|false\n    \ncaptureComplete\n    exposure: 1   \n    imageFileName: \"xxxxx\"\n    \nframeComplete\n    exposure: 1\n\nposition\n    exposure: 1",
        "x": 110,
        "y": 1130,
        "wires": []
    },
    {
        "id": "ac0e05234a14655c",
        "type": "function",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Data Calculations",
        "func": "let interval = global.get('interval'); //time in minutes\nlet startHour = parseInt(global.get('startTime')); //military time integer\nlet endHour = parseInt(global.get('endTime'));//military time integer\nlet weekDays = 5; // 1-7\nlet frameSize = global.get('fileSize'); //Frame size in Mb\nlet dailyHours = endHour - startHour;\nlet cameras = 2; //number of cameras\n\nlet dailyFrames = (dailyHours*60)/interval;\nlet monthlyFrames = (dailyFrames*weekDays)*4\n\nlet dailyDownload = (dailyFrames*frameSize)/1024; //Size in Gb\nlet weeklyDownload = (dailyFrames*weekDays)*frameSize/1024; //Size in Gb\nlet monthlyDownload = (monthlyFrames*frameSize)/1024; //Size in Gb\n\nmsg.payload = {\n\n    DailyFrames: dailyFrames,\n    MonthlyFrames: monthlyFrames,\n    DailyDownload_Gb: parseFloat(dailyDownload.toFixed(1)),\n    WeeklyDownload_Gb: parseFloat(weeklyDownload.toFixed(1)),\n    MonthlyDownload_Gb: parseFloat(monthlyDownload.toFixed(1)),\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "4871b344d6671ecf"
            ]
        ]
    },
    {
        "id": "4871b344d6671ecf",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Calculations",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 200,
        "wires": []
    },
    {
        "id": "eef13addb5939a98",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "set fileSize variable",
        "rules": [
            {
                "t": "set",
                "p": "fileSize",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 240,
        "wires": [
            [
                "1468539339414676"
            ]
        ]
    },
    {
        "id": "1468539339414676",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "File Size",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 240,
        "wires": []
    },
    {
        "id": "0e4f9f21c44e4155",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Camera Name",
        "links": [
            "beccddc992f6cfbd"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "736dd74c72d2a204"
            ]
        ]
    },
    {
        "id": "191c1d8ffa34bbe6",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Interval",
        "links": [
            "be24dd8189481830"
        ],
        "x": 75,
        "y": 300,
        "wires": [
            [
                "e04c5893018bb8f9"
            ]
        ]
    },
    {
        "id": "3bcbb20cdf28833c",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "Start Time",
        "links": [
            "412bc206bcf4755c"
        ],
        "x": 75,
        "y": 340,
        "wires": [
            [
                "f155cd0a6b510828"
            ]
        ]
    },
    {
        "id": "4c14d19363082c7c",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "0bb745afc23d0509",
        "name": "End Time",
        "links": [
            "566508d582d9ca7e"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "eb4444322a75b3c1"
            ]
        ]
    },
    {
        "id": "c1ceaa231f70e595",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "File Size",
        "links": [
            "1bc7f71706ceea1d"
        ],
        "x": 955,
        "y": 240,
        "wires": [
            [
                "eef13addb5939a98"
            ]
        ]
    },
    {
        "id": "603cd39c5c9e7e12",
        "type": "link out",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Frame Shot",
        "mode": "link",
        "links": [
            "413f398f8b246afd"
        ],
        "x": 965,
        "y": 600,
        "wires": []
    },
    {
        "id": "68e544609342c4b8",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 760,
        "wires": [
            [
                "ad668695f02ae062"
            ]
        ]
    },
    {
        "id": "f5f26648fe24ff3b",
        "type": "delay",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 800,
        "wires": [
            [
                "4dd1bbe994c3b52f"
            ]
        ]
    },
    {
        "id": "14736c5d8fc2fce6",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "Number of days in week",
        "links": [
            "09ae81d09c077154"
        ],
        "x": 955,
        "y": 280,
        "wires": [
            [
                "583a423cd7a9e971"
            ]
        ]
    },
    {
        "id": "583a423cd7a9e971",
        "type": "change",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "set weekDays variable",
        "rules": [
            {
                "t": "set",
                "p": "weekDays",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 280,
        "wires": [
            [
                "918751fa42cebd85"
            ]
        ]
    },
    {
        "id": "918751fa42cebd85",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "728af4eea16d05c3",
        "name": "# of days",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 280,
        "wires": []
    },
    {
        "id": "95162f2031c7c733",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Trigger from Setup Screen",
        "links": [
            "62a79b1eeecdbfcf"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "ca9db2b297167bc6"
            ]
        ]
    },
    {
        "id": "8d53700361a8d8ba",
        "type": "countula",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Counter",
        "x": 1020,
        "y": 760,
        "wires": [
            [],
            [
                "c485baf2dbc34784"
            ]
        ]
    },
    {
        "id": "d7df4ca601759750",
        "type": "debug",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 760,
        "wires": []
    },
    {
        "id": "36afaf5c0128c993",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "66d748d8b763e343",
        "name": "Alive Comm",
        "link": "",
        "director": "70b986f801f2d36c",
        "resendLast": false,
        "x": 1150,
        "y": 380,
        "wires": [
            [
                "d2d9a905d0204ceb"
            ]
        ]
    },
    {
        "id": "2bbd39311ee7a069",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "Dragonframe lost Comm",
        "link": "",
        "director": "70b986f801f2d36c",
        "resendLast": false,
        "x": 750,
        "y": 920,
        "wires": [
            [
                "aa69fab8dd6d1c40"
            ]
        ]
    },
    {
        "id": "edd2e6c375c6198e",
        "type": "break actor",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "Intervalometer",
        "link": "",
        "director": "70b986f801f2d36c",
        "resendLast": false,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "ca9db2b297167bc6"
            ]
        ]
    },
    {
        "id": "5b745e71205304b9",
        "type": "link out",
        "z": "20ac8dd407885f5d",
        "g": "9bb44f6703637248",
        "name": "dfPort",
        "mode": "link",
        "links": [
            "0fb5a9bb5160bba9"
        ],
        "x": 755,
        "y": 120,
        "wires": []
    },
    {
        "id": "0fb5a9bb5160bba9",
        "type": "link in",
        "z": "20ac8dd407885f5d",
        "g": "fc95a5364964861e",
        "name": "dfPort",
        "links": [
            "5b745e71205304b9"
        ],
        "x": 1575,
        "y": 540,
        "wires": [
            [
                "8c50a50d865f61ce"
            ]
        ]
    }
]